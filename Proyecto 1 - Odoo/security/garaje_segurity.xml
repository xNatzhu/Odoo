<xml version="1.0" encoding="utf-8"?>

<odoo>
    <data>
    <!--SE ESTARAN ALMACENANDO EN ESTA CATEGORIA TODO LOS GRUPOS DE SEGURIDAD-->
        <record model="ir.module.category" id="garaje.module_category_garaje">
            <field name="name">Garaje</field><!--El nombre de la categoria-->
            <field name="description">Ayuda gestionar tu garaje</field> <!--Descripcion de la categoria-->
            <field name="sequence">100</field> <!--Las secuencias indican una prioridad para mostrar la informacion o gestionar la info-->

        </record>
        <!--GRUPOS DE SEGURIDAD-->

<!--###################################################################################################-->

        <!--grupo de seguridad 1-->

        <!--Este grupo se creara para los perfiles que puedan gestionar coches y mantenimientos..-->


        <record model="res.groups" id="group_garaje_usuario"> <!--El id es un ID  final. donde se van estar gestionando los perfiles...-->
                <!--res.groups es el modelo que presenta la documentacion para los permisos-->

            <field name="name">Usuario</field><!--Va tener como valor el nombre del grupo y esto permitira vincularlo en el name del archivo CSV-->
            <field name="category_id" ref="garaje.module_category_garaje"></field>
            <!--De esta manera tenemos la relacion de padre hijo. toma referencia del primer record creado. Esti va permitir que se encuentre dentro de la categoria este grupo..-->

            <field name="comment">Usuarios que gestionan coches y mantenimientos</field>
             <!--Descripcion para el grupo de usuario-->

             
            <!--
                si quisieramos añadir todos los usuarios a un grupo
                <field name="implied_ids" eval="[(4, ref('base.group_user'))">
                -->

        </record>


<!--###################################################################################################-->
       
       <!--Grupo de seguridad 2-->

        <!--Los permisos para el administrador que se llamo director.-->

        <record model="res.groups" id="group_garaje_director">
            <field name="name">Director</field><!--El nombre es el nombre del grupo de permiso que tendra en este caso director-->
            <field name="category_id" ref="garaje.module_category_garaje"></field>
            <field name="comment">Usuarios que gestionan los Aparcamiento</field> 

            <!--
                Para que el director tambien pueda tener permiso para editar coches y mantenimiento se debe hacer lo siguiente:
            -->
            <!--El name="implied_ids" siempre es igual. si hay duda se puede consultar el modelo relacional en DB de res.groups.
            El campo implied_ids es un campo que tiene una relacion de uno a muchos.-->

            <field name="implied_ids" eval="[(4, ref('group_garaje_usuario'))]"></field>

            <!--ORM 
            COMMON ORM METHODS

            [(4, ref('group_garaje_usuario'))]
            EXPLICACION: ODOO 14

            (0, 0, valores)
            añade un nuevo registro creado a partir del dictado de valores proporcionado.

            (1, id, valores)
            actualiza un registro existente de id con los valores de values. No se puede utilizar en create().

            (2, id, 0)
            elimina el registro de id id del conjunto, y luego lo borra (de la base de datos). No se puede utilizar en create().

            (3, id, 0)
            elimina el registro de id id del conjunto, pero no lo borra. No puede utilizarse en create().

            (4, id, 0)
            añade un registro existente de id id al conjunto.

            (5, 0, 0)
            elimina todos los registros del conjunto, lo que equivale a utilizar el comando 3 en cada registro explícitamente. No puede utilizarse en create().

            (6, 0, ids)
            reemplaza todos los registros existentes en el conjunto por la lista ids, equivalente a utilizar el comando 5 seguido del comando 4 para cada id en ids.
            
            -->

            <!--Añadimos a los usuarios administradores de Odoo-->

            <field name="users" eval="[(4, ref('base.user_root')), (4, ref('base.user_admin'))]"></field>
            <!--'base.user_root'= "Usuarios de raiz"-->
        </record>
<!--###################################################################################################-->


    </data>
</odoo>